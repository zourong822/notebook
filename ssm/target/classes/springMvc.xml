<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--springMvc的注解扫描,此处有一个巨坑，use-default-filters默认值为true,会扫描所有注入的注解
        如果只配置<context:include-filter>则还是表示啥都扫描，会导致事务管理器被SpringMVC管理，而不是Spring
        SpringMVC的容器是Spring的子容器，子容器可以访问父容器，父容器不可以访问子容器，有点类似于继承
        从软件层面上来说，Spring MVC是展示层可以调用业务层，业务层不能调用展示层。
        参考博客：https://www.cnblogs.com/Esummer/p/11791468.html
        结果就导致事务控制失败。
        <context:include-filter>和use-default-filters="false"配合使用才能达到“只扫描。。。”的目的
        -->
    <context:component-scan base-package="com.company" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:include-filter>
    </context:component-scan>

    <!--配置视图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!--配置放行静态资源-->
    <mvc:resources mapping="/js/**" location="/js/"></mvc:resources>

    <!--开启springMVC注解的支持-->
    <mvc:annotation-driven/>
</beans>